<?php
/**
 * Generated by Haxe 4.1.4
 */

namespace php\_Generator;

use \php\Boot;

class GeneratorIterator {
	/**
	 * @var bool
	 * This field is required to maintain execution order of .next()/.valid()/.current() methods.
	 * @see http://php.net/manual/en/class.iterator.php
	 */
	public $first;
	/**
	 * @var \Generator
	 */
	public $generator;

	/**
	 * @param \Generator $generator
	 * 
	 * @return void
	 */
	public function __construct ($generator) {
		$this->first = true;
		$this->generator = $generator;
	}

	/**
	 * @return bool
	 */
	public function hasNext () {
		if ($this->first) {
			$this->first = false;
		} else {
			$this->generator->next();
		}
		return $this->generator->valid();
	}

	/**
	 * @return mixed
	 */
	public function next () {
		return $this->generator->current();
	}
}

Boot::registerClass(GeneratorIterator::class, 'php._Generator.GeneratorIterator');
