<?php
/**
 * Generated by Haxe 4.1.5
 */

namespace thenshim\fallback;

use \php\Boot;
use \php\_Boot\HxEnum;

/**
 * Internal promise states.
 */
class PromiseState extends HxEnum {
	/**
	 * @return PromiseState
	 */
	static public function Fulfilled () {
		static $inst = null;
		if (!$inst) $inst = new PromiseState('Fulfilled', 1, []);
		return $inst;
	}

	/**
	 * @return PromiseState
	 */
	static public function Pending () {
		static $inst = null;
		if (!$inst) $inst = new PromiseState('Pending', 0, []);
		return $inst;
	}

	/**
	 * @return PromiseState
	 */
	static public function Rejected () {
		static $inst = null;
		if (!$inst) $inst = new PromiseState('Rejected', 2, []);
		return $inst;
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			1 => 'Fulfilled',
			0 => 'Pending',
			2 => 'Rejected',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'Fulfilled' => 0,
			'Pending' => 0,
			'Rejected' => 0,
		];
	}
}

Boot::registerClass(PromiseState::class, 'thenshim.fallback.PromiseState');
