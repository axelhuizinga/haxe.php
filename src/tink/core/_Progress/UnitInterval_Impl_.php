<?php
/**
 * Generated by Haxe 4.1.1
 */

namespace tink\core\_Progress;

use \php\Boot;
use \php\_Boot\HxString;

final class UnitInterval_Impl_ {
	/**
	 * @param float $this
	 * @param int $dp
	 * 
	 * @return string
	 */
	public static function toPercentageString ($this1, $dp) {
		$m = (10 ** $dp);
		$s = \Std::string((int)(floor($this1 * $m * 100 + 0.5)) / $m);
		$_g = HxString::indexOf($s, ".");
		if ($_g === -1) {
			return ($s??'null') . "." . (\StringTools::lpad("", "0", $dp)??'null') . "%";
		} else if ((mb_strlen($s) - $_g) > $dp) {
			return (mb_substr($s, 0, $dp + $_g + 1)??'null') . "%";
		} else {
			return (\StringTools::rpad($s, "0", $_g + $dp + 1)??'null') . "%";
		}
	}
}

Boot::registerClass(UnitInterval_Impl_::class, 'tink.core._Progress.UnitInterval_Impl_');
