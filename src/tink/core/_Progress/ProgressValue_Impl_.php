<?php
/**
 * Generated by Haxe 4.1.1
 */

namespace tink\core\_Progress;

use \haxe\ds\Option;
use \php\Boot;
use \tink\core\MPair;

final class ProgressValue_Impl_ {

	/**
	 * @param float $value
	 * @param Option $total
	 * 
	 * @return MPair
	 */
	public static function _new ($value, $total) {
		return new MPair($value, $total);
	}

	/**
	 * @param MPair $this
	 * 
	 * @return Option
	 */
	public static function get_total ($this1) {
		return $this1->b;
	}

	/**
	 * @param MPair $this
	 * 
	 * @return float
	 */
	public static function get_value ($this1) {
		return $this1->a;
	}

	/**
	 * Normalize to 0-1 range
	 * 
	 * @param MPair $this
	 * 
	 * @return Option
	 */
	public static function normalize ($this1) {
		$o = $this1->b;
		if ($o->index === 0) {
			return Option::Some($this1->a / $o->params[0]);
		} else {
			return Option::None();
		}
	}
}

Boot::registerClass(ProgressValue_Impl_::class, 'tink.core._Progress.ProgressValue_Impl_');
Boot::registerGetters('tink\\core\\_Progress\\ProgressValue_Impl_', [
	'total' => true,
	'value' => true
]);
