<?php
/**
 * Generated by Haxe 4.1.5
 */

namespace tink\streams;

use \tink\core\_Signal\Signal_Impl_;
use \php\Boot;
use \tink\core\SignalObject;

class SignalStream extends Generator {
	/**
	 * @param SignalObject $signal
	 * 
	 * @return void
	 */
	public function __construct ($signal) {
		parent::__construct(Signal_Impl_::nextTime($signal)->map(function ($o) use (&$signal) {
			$__hx__switch = ($o->index);
			if ($__hx__switch === 0) {
				return Step::Link($o->params[0], new SignalStream($signal));
			} else if ($__hx__switch === 1) {
				return Step::Fail($o->params[0]);
			} else if ($__hx__switch === 2) {
				return Step::End();
			}
		})->gather()->eager());
	}
}

Boot::registerClass(SignalStream::class, 'tink.streams.SignalStream');
