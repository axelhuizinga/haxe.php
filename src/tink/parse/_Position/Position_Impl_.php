<?php
/**
 * Generated by Haxe 4.1.5
 */

namespace tink\parse\_Position;

use \php\_Boot\HxAnon;
use \php\Boot;

final class Position_Impl_ {

	/**
	 * @param int $min
	 * @param int $max
	 * @param string $file
	 * 
	 * @return object
	 */
	public static function _new ($min, $max, $file) {
		return new HxAnon([
			"min" => $min,
			"max" => $max,
			"file" => $file,
		]);
	}

	/**
	 * @param object $this
	 * 
	 * @return object
	 */
	public static function getData ($this1) {
		return $this1;
	}

	/**
	 * @param object $this
	 * 
	 * @return string
	 */
	public static function get_file ($this1) {
		return $this1->file;
	}

	/**
	 * @param object $this
	 * 
	 * @return int
	 */
	public static function get_max ($this1) {
		return $this1->min;
	}

	/**
	 * @param object $this
	 * 
	 * @return int
	 */
	public static function get_min ($this1) {
		return $this1->min;
	}
}

Boot::registerClass(Position_Impl_::class, 'tink.parse._Position.Position_Impl_');
Boot::registerGetters('tink\\parse\\_Position\\Position_Impl_', [
	'file' => true,
	'max' => true,
	'min' => true
]);
