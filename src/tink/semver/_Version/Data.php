<?php
/**
 * Generated by Haxe 4.1.3
 */

namespace tink\semver\_Version;

use \php\Boot;
use \haxe\Exception;

class Data {
	/**
	 * @var int
	 */
	public $major;
	/**
	 * @var int
	 */
	public $minor;
	/**
	 * @var int
	 */
	public $patch;
	/**
	 * @var string
	 */
	public $preview;
	/**
	 * @var int
	 */
	public $previewNum;

	/**
	 * @param int $major
	 * @param int $minor
	 * @param int $patch
	 * @param string $preview
	 * @param int $previewNum
	 * 
	 * @return void
	 */
	public function __construct ($major, $minor, $patch, $preview = null, $previewNum = -1) {
		if ($previewNum === null) {
			$previewNum = -1;
		}
		if (($major < 0) || ($minor < 0) || ($patch < 0)) {
			throw Exception::thrown("version components must not be negative");
		}
		$this->major = $major;
		$this->minor = $minor;
		$this->patch = $patch;
		$this->preview = $preview;
		$this->previewNum = $previewNum;
	}

	/**
	 * @return string
	 */
	public function toString () {
		$ret = "" . ($this->major??'null') . "." . ($this->minor??'null') . "." . ($this->patch??'null');
		if ($this->preview !== null) {
			$ret = ($ret??'null') . "-" . ($this->preview??'null');
			if ($this->previewNum !== -1) {
				$ret = ($ret??'null') . "." . ($this->previewNum??'null');
			}
		}
		return $ret;
	}

	public function __toString() {
		return $this->toString();
	}
}

Boot::registerClass(Data::class, 'tink.semver._Version.Data');
