<?php
/**
 * Generated by Haxe 4.1.1
 */

namespace sys\io;

use \php\Boot;
use \haxe\Exception;
use \haxe\io\Output;
use \haxe\io\Eof;
use \haxe\io\Error;
use \haxe\io\Bytes;

/**
 * Use `sys.io.File.write` to create a `FileOutput`.
 */
class FileOutput extends Output {
	/**
	 * @var mixed
	 */
	public $__f;

	/**
	 * @param mixed $f
	 * 
	 * @return void
	 */
	public function __construct ($f) {
		$this->__f = $f;
	}

	/**
	 * @return void
	 */
	public function close () {
		parent::close();
		if ($this->__f !== null) {
			fclose($this->__f);
		}
	}

	/**
	 * @return void
	 */
	public function flush () {
		if (fflush($this->__f) === false) {
			throw Exception::thrown(Error::Custom("An error occurred"));
		}
	}

	/**
	 * @param int $p
	 * @param FileSeek $pos
	 * 
	 * @return void
	 */
	public function seek ($p, $pos) {
		$w = null;
		$__hx__switch = ($pos->index);
		if ($__hx__switch === 0) {
			$w = SEEK_SET;
		} else if ($__hx__switch === 1) {
			$w = SEEK_CUR;
		} else if ($__hx__switch === 2) {
			$w = SEEK_END;
		}
		if (fseek($this->__f, $p, $w) === false) {
			throw Exception::thrown(Error::Custom("An error occurred"));
		}
	}

	/**
	 * @return int
	 */
	public function tell () {
		$r = ftell($this->__f);
		if ($r === false) {
			throw Exception::thrown(Error::Custom("An error occurred"));
		}
		return $r;
	}

	/**
	 * @param int $c
	 * 
	 * @return void
	 */
	public function writeByte ($c) {
		if (fwrite($this->__f, chr($c)) === false) {
			throw Exception::thrown(Error::Custom("An error occurred"));
		}
	}

	/**
	 * @param Bytes $b
	 * @param int $p
	 * @param int $l
	 * 
	 * @return int
	 */
	public function writeBytes ($b, $p, $l) {
		$s = null;
		if (($p < 0) || ($l < 0) || (($p + $l) > $b->length)) {
			throw Exception::thrown(Error::OutsideBounds());
		} else {
			$s = substr($b->b->s, $p, $l);
		}
		if (feof($this->__f)) {
			throw Exception::thrown(new Eof());
		}
		$r = fwrite($this->__f, $s, $l);
		if ($r === false) {
			throw Exception::thrown(Error::Custom("An error occurred"));
		}
		return $r;
	}
}

Boot::registerClass(FileOutput::class, 'sys.io.FileOutput');
