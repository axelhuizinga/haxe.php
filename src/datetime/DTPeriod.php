<?php
/**
 * Generated by Haxe 4.1.4
 */

namespace datetime;

use \php\Boot;
use \php\_Boot\HxEnum;

/**
 * Time periods for date math
 *
 */
class DTPeriod extends HxEnum {
	/**
	 * @param int $n
	 * 
	 * @return DTPeriod
	 */
	static public function Day ($n) {
		return new DTPeriod('Day', 2, [$n]);
	}

	/**
	 * @param int $n
	 * 
	 * @return DTPeriod
	 */
	static public function Hour ($n) {
		return new DTPeriod('Hour', 3, [$n]);
	}

	/**
	 * @param int $n
	 * 
	 * @return DTPeriod
	 */
	static public function Minute ($n) {
		return new DTPeriod('Minute', 4, [$n]);
	}

	/**
	 * @param int $n
	 * 
	 * @return DTPeriod
	 */
	static public function Month ($n) {
		return new DTPeriod('Month', 1, [$n]);
	}

	/**
	 * @param int $n
	 * 
	 * @return DTPeriod
	 */
	static public function Second ($n) {
		return new DTPeriod('Second', 5, [$n]);
	}

	/**
	 * @param int $n
	 * 
	 * @return DTPeriod
	 */
	static public function Week ($n) {
		return new DTPeriod('Week', 6, [$n]);
	}

	/**
	 * @param int $n
	 * 
	 * @return DTPeriod
	 */
	static public function Year ($n) {
		return new DTPeriod('Year', 0, [$n]);
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			2 => 'Day',
			3 => 'Hour',
			4 => 'Minute',
			1 => 'Month',
			5 => 'Second',
			6 => 'Week',
			0 => 'Year',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'Day' => 1,
			'Hour' => 1,
			'Minute' => 1,
			'Month' => 1,
			'Second' => 1,
			'Week' => 1,
			'Year' => 1,
		];
	}
}

Boot::registerClass(DTPeriod::class, 'datetime.DTPeriod');
