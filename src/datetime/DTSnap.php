<?php
/**
 * Generated by Haxe 4.1.4
 */

namespace datetime;

use \php\Boot;
use \php\_Boot\HxEnum;

/**
 * Time periods for date/time snapping. See DateTime.snap()
 *
 */
class DTSnap extends HxEnum {
	/**
	 * @param int $direction
	 * 
	 * @return DTSnap
	 */
	static public function Day ($direction) {
		return new DTSnap('Day', 2, [$direction]);
	}

	/**
	 * @param int $direction
	 * 
	 * @return DTSnap
	 */
	static public function Hour ($direction) {
		return new DTSnap('Hour', 3, [$direction]);
	}

	/**
	 * @param int $direction
	 * 
	 * @return DTSnap
	 */
	static public function Minute ($direction) {
		return new DTSnap('Minute', 4, [$direction]);
	}

	/**
	 * @param int $direction
	 * 
	 * @return DTSnap
	 */
	static public function Month ($direction) {
		return new DTSnap('Month', 1, [$direction]);
	}

	/**
	 * @param int $direction
	 * 
	 * @return DTSnap
	 */
	static public function Second ($direction) {
		return new DTSnap('Second', 5, [$direction]);
	}

	/**
	 * @param int $direction
	 * @param int $day
	 * 
	 * @return DTSnap
	 */
	static public function Week ($direction, $day) {
		return new DTSnap('Week', 6, [$direction, $day]);
	}

	/**
	 * @param int $direction
	 * 
	 * @return DTSnap
	 */
	static public function Year ($direction) {
		return new DTSnap('Year', 0, [$direction]);
	}

	/**
	 * Returns array of (constructorIndex => constructorName)
	 *
	 * @return string[]
	 */
	static public function __hx__list () {
		return [
			2 => 'Day',
			3 => 'Hour',
			4 => 'Minute',
			1 => 'Month',
			5 => 'Second',
			6 => 'Week',
			0 => 'Year',
		];
	}

	/**
	 * Returns array of (constructorName => parametersCount)
	 *
	 * @return int[]
	 */
	static public function __hx__paramsCount () {
		return [
			'Day' => 1,
			'Hour' => 1,
			'Minute' => 1,
			'Month' => 1,
			'Second' => 1,
			'Week' => 2,
			'Year' => 1,
		];
	}
}

Boot::registerClass(DTSnap::class, 'datetime.DTSnap');
