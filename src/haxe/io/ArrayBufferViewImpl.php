<?php
/**
 * Generated by Haxe 4.1.5
 */

namespace haxe\io;

use \php\Boot;
use \haxe\Exception;

class ArrayBufferViewImpl {
	/**
	 * @var int
	 */
	public $byteLength;
	/**
	 * @var int
	 */
	public $byteOffset;
	/**
	 * @var Bytes
	 */
	public $bytes;

	/**
	 * @param Bytes $bytes
	 * @param int $pos
	 * @param int $length
	 * 
	 * @return void
	 */
	public function __construct ($bytes, $pos, $length) {
		$this->bytes = $bytes;
		$this->byteOffset = $pos;
		$this->byteLength = $length;
	}

	/**
	 * @param int $begin
	 * @param int $length
	 * 
	 * @return ArrayBufferViewImpl
	 */
	public function sub ($begin, $length = null) {
		if ($length === null) {
			$length = $this->byteLength - $begin;
		}
		if (($begin < 0) || ($length < 0) || (($begin + $length) > $this->byteLength)) {
			throw Exception::thrown(Error::OutsideBounds());
		}
		return new ArrayBufferViewImpl($this->bytes, $this->byteOffset + $begin, $length);
	}

	/**
	 * @param int $begin
	 * @param int $end
	 * 
	 * @return ArrayBufferViewImpl
	 */
	public function subarray ($begin = null, $end = null) {
		if ($begin === null) {
			$begin = 0;
		}
		if ($end === null) {
			$end = $this->byteLength - $begin;
		}
		return $this->sub($begin, $end - $begin);
	}
}

Boot::registerClass(ArrayBufferViewImpl::class, 'haxe.io.ArrayBufferViewImpl');
